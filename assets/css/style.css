/* universal selector '*' aka 'wild-card' 
used to over-ride some default browser elements */
* {
    margin: 0;
    padding: 0;
    /* this is telling the browser to ignore padding
    in overall width, to help address issue brought in the footer
    re 100% width plus 35px padding */
    box-sizing: border-box;
}

/* applies color and font to whole page */
body {
    color: #39a6b2;
    font-family: Helvetica, Arial, sans-serif;
}

/* apply styles to <header> */
header {
    padding: 20px 35px;
    background-color: #39a6b2;
    /* the application of flexbox will make the <header> (parent element) a row and control the distribution of its content (child elements) on either a horizontal or vertical axis to facilitate dynamic re-sizing; flexbox over-rides block-level behavior */
    display: flex;
    /* the following property applies only to elements using 'flex' or 'grid' values and controls how space is distributed between child elements */
    justify-content: space-between;
    /* following property controls the flow of elements on the x-axis "main axis" of the flexbox container */
    flex-wrap: wrap;
}

/* apply specific style to h1 in header */
header h1 {
    font-weight: bold;
    font-size: 36px;
    color: #fce138;
    margin: 0;
}

header a {
    text-decoration: none;
    color: #fce138;    
}

header nav {
    margin: 7px 0;
}

header nav ul {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    /* following property controls the flow of elements on the y-axis "cross axis" of the flexbox container */
    align-items: center;
    /* following property controlls style and positioning of list items */
    list-style: none;
}

header nav ul li a {
    PADDING: 10px 15px;
    font-weight: lighter;
    /* the following property value uses the "viewport width" unit of measurement, which is a relative measurement of fontsize to total window width, as a percentage */
    font-size: 1.55vw;
}

footer {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    background: #fce138;
    width: 100%;
    padding: 40px 35px;
}

footer h2 {
    color: #024e76;
    font-size: 30px;
    margin: 0;
}

footer div {
    line-height: 1.5;
    text-align: right;
}

footer a {
    color: #024e76;
}

section {
    padding: 60px;
}

/* the "." notation indicates class as our CSS selector. Note also, we are using
    the relative URL path to select the background image. */
.hero {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    background-image: url("../images/hero-bg.jpg");
    background-size: cover;
    background-position: center;
    /* the default value for the below property is 'stretch' which sets all flex children to the height of the tallest one */
    align-items: flex-start;
}

/* the following attributes could be used successfully to override those in the above .hero, however, for the sake of demonstrating a different option, we will be creating a seperate stylesheet.
.hero-secondary {
    background-color: black;
    color: red;
} */

.hero-cta {
    width: 40%;
    text-align: right;
    margin: 3.5%;
    color: #fff;
    font-size: 18px;
    line-height: 1.2;
}

.hero-cta h2 {
    font-style: italic;
    font-size: 55px;
    color: #fce138;
}

.hero-form {
    color: #024e76;
    background-color: #fce138;
    padding: 20px;
    /* shorthand property to allow border style, width and color all in one line, 
        which would otherwise be denoted individually as "border-style" "border-width"
        and "border-color" */
    border: solid 3px #024e76;
}

.hero-form h3 {
    font-size: 24px;
    margin: 0;
}

.hero-form p {
    margin: 5px 0 15px 0;
}

.form-input {
    border: solid 1px c#024e76;
    display: block;
    padding: 7px 15px;
    font-size: 16px;
    color: #024e76;
    width: 100%;
    margin-bottom: 15px;
}

.hero-form label {
    margin: 0 5px;
}

.hero-form button {
    background-color: #024e76;
    color: #fce138;
    padding: 10px 20px;
    font-size: 16px;
    border: none;
}

.intro p {
    line-height: 1.7;
    color: #39a6b2;
    text-align: center;
    width: 80%;
    font-size: 20px;
    margin: 0 auto;
    /* margin attribute is added here in order to resolve the off-set centering of text brought about by
        the 80% block element; 'auto' will tell the browser to calculate the margins, making them roughly even. 
        This works only for horizontally applied 'auto' - will not work on the vertical. */
}

.section-title {
    font-size: 48px;
    color: #024e76;
    border-bottom: 3px solid;
    /* the following value produces an in-line element, padding and similar attricutes behave as they would with block.*/
    padding-bottom: 20px;
    text-align: center;
    margin: 0 auto 35px auto;
    width: 50%;
}

.primary-border {
    border-bottom-color: #fce138;
}

.secondary-border {
    border-bottom-color: #39a6b2;
}

.steps {
    background: #fce138;
}

.step {
    margin: 50px auto;
    padding-bottom: 50px;
    width: 80%;
    border-bottom: 1px solid #39a6b2;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-between;
}

/* the 'flex' property helps define a similar size for children, independent of text content, and can include 3 values: 'flex-grow' (determines how much of the unused space will be distributed to its children), 'flex-shrink' (determines how to size children when container shrinks) and 'flex-basis' (a baseline minimum value for the children); the following applications of 'flex' includes values for 'flex-grow' and 'flex-basis' */
.step h3 {
    color: #024e76;
    font-size: 46px;
    /* 'flex' for the following ensures the selector will be >= 30% wide and take any extra space*/
    flex: 1 30%
}

/* 'flex' for the following ensures the selector will be >= 70% wide and will receive extra container space at twice the size of a sibling with a 'flex-grow' value of 1 */
.step-info {
    flex: 2 70%;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
}

/*  since the other siblings within this <div> have flexbox width attributes, the img child also needs to have flexbox attributes, or it will not show up because the browser does not know what space to give to it */
.step-img {
    flex: 1 12%;
    margin-right: 20px;
}

/* this rule will limit the size of the image to the size of its container which can be a problem with browsers running on Microsoft Edge. */
.step-img img {
    max-width: 100%;
}

/* when 'flex-basis' property is excluded from 'flex' it is given a value of 'auto' meaning it is given any remaining space */
.step-text {
    flex: 12;
}

.step-text h4 {
    font-size: 26px;
    line-height: 1.5;
    color: #024e76
}

.trainers {
    width: 100%;
    margin: 0 auto;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
}

.trainer {
    flex: 1;
    margin: 20px;
    background: #024e76;
    color: #fce138;
}

.trainer img {
    width: 100%;
}

.trainer-bio {
    padding: 25px;
    line-height: 1.3;
}

.trainer-bio h3 {
    font-size: 28px;
}

.trainer-bio h4 {
    font-weight: lighter;
    font-size: 22px;
    margin-bottom: 15px;
}

.trainer-bio p {
    font-size: 17px;
}

.service-grid-container {
    display: grid;
}

.service-grid-item {
    width: 200px;
    height: 50px;
    background-color: orange;
    border: solid;
    color: black;
}

.contact {
    background-color: #024e76;
    margin-bottom: 3px solid #39a6b2;
}

.contact h2 {
    color: #fce138;
}

.contact-info {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
}

/* the following '>*' syntax indicates to select all elements that are direct children of anything with a class of 'contact-info' */
.contact-info > * {
    flex: 1;
    margin: 15px;
}

/* By using a "class selector" here, instead of a "type selector" (which is what we would have it we targeted only 
    the iframe) we avoid a situation where styling is being applied to unintended targets, should additional iframes
    be used on other pages referenced by this style sheet. */
.contact-info iframe {
    height: 400px;
}

.contact-info div {
    color: white;
}

.contact-info h3 {
    color: #fce138;
    font-size: 32px;
}

/* the following rules target two different elements. */
.contact-info p, .contact-info address {
    margin: 20px 0;
    line-height: 1.5;
    font-size: 16px;
    font-style: normal;
}

.contact-info a {
    color: #fce138;
}

.contact-form input, .contact-form textarea {
    border: 1px solid #024e76;
    display: block;
    padding: 7px 15px;
    font-size: 16px;
    color: #024e76;
    width: 100%;
    margin-bottom: 15px;
    margin-top: 5px;
}

.contact-form button {
    width: 100%;
    border: none;
    background: #fce138;
    color: #024e76;
    text-align: center;
    padding: 15px 0;
    font-size: 16px;
}

/* The following two classes are referred to as "utility classes" because they are not specific to any part of the HTML doc and they do only one thing; they can in this case be applied anywhere on the page needing a text-align fix.*/
.text-left {
    text-align: left;
}

.text-right {
    text-align: right;
}

/* flexbox properties are being added to affect elements within the "What We Do" section; though this is a single-column section and most changes will not have an obvious impact, added flexbox functionality will nevertheless enable handling of 'justify' and 'align' properties easier across multiple screen sizes */
.flex-row {
    display: flex;
}

/* it is important to put media queries at the end of the stylesheet and (because we are using 'max-width') in descending order in term of size for the desired affects to display properly on all screens */
/* MEDIA QUERY FOR SMALLER DESKTOP SCREENS */
@media screen and (max-width: 980px) {
    header {
        padding-bottom: 0;
        justify-content: center;
    }

    header h1 {
        width: 100%;
        text-align: center;
    }

    header nav ul {
        margin-top: 20px;
        width: 100%;
        justify-content: center;
    }

    header nav ul li a {
        font-size: 20px;
    }

    footer h2, footer div {
        text-align: center;
        width: 100%;
    }

    .hero-cta, .hero-form {
        width: 100%;
    }

    .hero-cta {
        text-align: center;
    }

    /* adjustments impacting What We Do/What You Do sections to make wider on small screens */
    .section-title {
        width: 80%
    }

    /* just wide enough for each card to be on its own line */
    .trainer {
        flex: 0 70%;
    }

    /* making sure the Google map is on its own line */
    .contact-info iframe {
        flex: 1 100%;
    }
}

/* MEDIA QUERY FOR TABLETS */
/* changes promarily for the What You Do section to stack the children instead of presenting side-by-side and provide more room horizontally */
@media screen and (max-width: 768px) {
    section {
        padding: 30px 15px;
    }

    .step h3 {
        flex: 1 100%;
        text-align: center;
    }

    .step-info {
        flex: 2 100%;
        text-align: center;
        justify-content: center;
    }

    /* limiting the size of the images using flex-basis of 32% */
    .step-img {
        flex: 0 32%;
        margin-right: 0;
        margin-top: 15px;
        margin-bottom: 15px;
    }

    .step-text {
        flex: 100%;
    }
}

/* MEDIA QUERY FOR MOBILE PHONES */
/* similar, minor adjustments primarily impacting widths */
@media screen and (max-width: 575px) {
    /* increasing 'submit' button width to make it easier to use on mobile device */
    .hero-form button {
        width: 100%;
    }

    .section-title {
        width: 95%;
    }

    .intro p {
        width: 100%;
    }

    .trainer {
        flex: 0 100%;
    }

    .contact-info {
        text-align: center;
    }

    .contact-info > * {
        flex: 0 100%
    }

    /* the order property is used to switch the order of the map and the contact form */
    .contact-form {
        order: 3;
    }
}